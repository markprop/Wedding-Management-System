version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: wedding-planner-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: saink4831_db_user
      MONGO_INITDB_ROOT_PASSWORD: Wedding
      MONGO_INITDB_DATABASE: wedding_planner
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - wedding-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wedding-planner-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb+srv://saink4831_db_user:Wedding@suresh-wedding.autdlq2.mongodb.net/wedding_planner?retryWrites=true&w=majority&appName=Suresh-Wedding
      MAPBOX_ACCESS_TOKEN: pk.eyJ1Ijoic3VyZXNoYmFyYWNoMjAwMSIsImEiOiJjbWYzcDh5a3MwMGV0MmtzNDQ3ODlkY3p6In0.OVdVP7rRea7wK1UEn1OSfw
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - wedding-network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wedding-planner-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_MAPBOX_TOKEN: ${MAPBOX_ACCESS_TOKEN:-}
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - wedding-network

  # MongoDB Express (Database Admin UI) - Optional
  mongo-express:
    image: mongo-express:1.0.0
    container_name: wedding-planner-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: wedding123
      ME_CONFIG_MONGODB_URL: mongodb://admin:wedding123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongodb
    networks:
      - wedding-network

volumes:
  mongodb_data:

networks:
  wedding-network:
    driver: bridge

